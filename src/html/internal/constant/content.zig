const std = @import("std");

pub const FLOW_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"a"},
    .{"abbr"},
    .{"address"},
    .{"area"}, // if it is a descendant of a `map` element
    .{"article"},
    .{"aside"},
    .{"audio"},
    .{"b"},
    .{"bdi"},
    .{"bdo"},
    .{"blockquote"},
    .{"br"},
    .{"button"},
    .{"canvas"},
    .{"cite"},
    .{"code"},
    .{"data"},
    .{"datalist"},
    .{"del"},
    .{"details"},
    .{"dfn"},
    .{"dialog"},
    .{"div"},
    .{"dl"},
    .{"em"},
    .{"embed"},
    .{"fieldset"},
    .{"figure"},
    .{"footer"},
    .{"form"},
    .{"h1"},
    .{"h2"},
    .{"h3"},
    .{"h4"},
    .{"h5"},
    .{"h6"},
    .{"header"},
    .{"hgroup"},
    .{"hr"},
    .{"i"},
    .{"iframe"},
    .{"img"},
    .{"input"},
    .{"ins"},
    .{"kbd"},
    .{"label"},
    .{"link"}, // if it is allowed in the body
    .{"main"}, // if it is a hierarchically correct main element
    .{"map"},
    .{"mark"},
    .{"math"},
    .{"menu"},
    .{"meta"}, // if the itemprop attribute is present
    .{"meter"},
    .{"nav"},
    .{"noscript"},
    .{"object"},
    .{"ol"},
    .{"output"},
    .{"p"},
    .{"picture"},
    .{"pre"},
    .{"progress"},
    .{"q"},
    .{"ruby"},
    .{"s"},
    .{"samp"},
    .{"script"},
    .{"search"},
    .{"section"},
    .{"select"},
    .{"slot"},
    .{"small"},
    .{"span"},
    .{"strong"},
    .{"sub"},
    .{"sup"},
    .{"svg"},
    .{"table"},
    .{"template"},
    .{"textarea"},
    .{"time"},
    .{"u"},
    .{"ul"},
    .{"var"},
    .{"video"},
    .{"wbr"},
});

pub const SECTIONING_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"article"},
    .{"aside"},
    .{"nav"},
    .{"section"},
});

pub const HEADING_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"h1"},
    .{"h2"},
    .{"h3"},
    .{"h4"},
    .{"h5"},
    .{"h6"},
    .{"hgroup"}, // if it has a descendant h1 to h6 element
});

pub const PHRASING_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"a"},
    .{"abbr"},
    .{"area"}, // if it is a descendant of a map element
    .{"audio"},
    .{"b"},
    .{"bdi"},
    .{"bdo"},
    .{"br"},
    .{"button"},
    .{"canvas"},
    .{"cite"},
    .{"code"},
    .{"data"},
    .{"datalist"},
    .{"del"},
    .{"dfn"},
    .{"em"},
    .{"embed"},
    .{"i"},
    .{"iframe"},
    .{"img"},
    .{"input"},
    .{"ins"},
    .{"kbd"},
    .{"label"},
    .{"link"}, // if it is allowed in the body
    .{"map"},
    .{"mark"},
    .{"math"},
    .{"meta"}, // if the itemprop attribute is present
    .{"meter"},
    .{"noscript"},
    .{"object"},
    .{"output"},
    .{"picture"},
    .{"progress"},
    .{"q"},
    .{"ruby"},
    .{"s"},
    .{"samp"},
    .{"script"},
    .{"select"},
    .{"slot"},
    .{"small"},
    .{"span"},
    .{"strong"},
    .{"sub"},
    .{"sup"},
    .{"svg"},
    .{"template"},
    .{"textarea"},
    .{"time"},
    .{"u"},
    .{"var"},
    .{"video"},
    .{"wbr"},
});

pub const EMBEDDED_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"audio"},
    .{"canvas"},
    .{"embed"},
    .{"iframe"},
    .{"img"},
    .{"math"},
    .{"object"},
    .{"picture"},
    .{"svg"},
    .{"video"},
});

pub const INTERACTIVE_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"a"}, // if the href attribute is present
    .{"audio"}, // if the controls attribute is present
    .{"button"},
    .{"details"},
    .{"embed"},
    .{"iframe"},
    .{"img"}, // if the usemap attribute is present
    .{"input"}, // if the type attribute is not in the Hidden state
    .{"label"},
    .{"select"},
    .{"textarea"},
    .{"video"}, // if the controls attribute is present
});

pub const PALPABLE_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"a"},
    .{"abbr"},
    .{"address"},
    .{"article"},
    .{"aside"},
    .{"audio"}, // if the controls attribute is present
    .{"b"},
    .{"bdi"},
    .{"bdo"},
    .{"blockquote"},
    .{"button"},
    .{"canvas"},
    .{"cite"},
    .{"code"},
    .{"data"},
    .{"del"},
    .{"details"},
    .{"dfn"},
    .{"div"},
    .{"dl"}, // if the element's children include at least one name-value group
    .{"em"},
    .{"embed"},
    .{"fieldset"},
    .{"figure"},
    .{"footer"},
    .{"form"},
    .{"h1"},
    .{"h2"},
    .{"h3"},
    .{"h4"},
    .{"h5"},
    .{"h6"},
    .{"header"},
    .{"hgroup"},
    .{"i"},
    .{"iframe"},
    .{"img"},
    .{"input"}, // if the type attribute is not in the Hidden state
    .{"ins"},
    .{"kbd"},
    .{"label"},
    .{"main"},
    .{"map"},
    .{"mark"},
    .{"math"},
    .{"menu"}, // if the element's children include at least one li element
    .{"meta"},
    .{"meter"},
    .{"nav"},
    .{"object"},
    .{"ol"}, // if the element's children include at least one li element
    .{"output"},
    .{"p"},
    .{"picture"},
    .{"pre"},
    .{"progress"},
    .{"q"},
    .{"ruby"},
    .{"s"},
    .{"samp"},
    .{"search"},
    .{"section"},
    .{"select"},
    .{"small"},
    .{"span"},
    .{"strong"},
    .{"sub"},
    .{"sup"},
    .{"svg"},
    .{"table"},
    .{"textarea"},
    .{"time"},
    .{"u"},
    .{"ul"}, // if the element's children include at least one li element
    .{"var"},
    .{"video"},
});

pub const SCRIPTING_CONTENT = std.StaticStringMap(void).initComptime(.{
    .{"script"},
    .{"template"},
});
